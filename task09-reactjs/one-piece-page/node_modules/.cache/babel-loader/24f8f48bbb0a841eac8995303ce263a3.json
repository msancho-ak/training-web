{"ast":null,"code":"var _jsxFileName = \"/Users/minorsancho/Documents/Web Training/training-web/task09-reactjs/one-piece-page/src/Components/CommonItemsContainerGrid.js\";\nimport React, { Component } from 'react';\nimport luffy from '../images/monkeydluffy.svg';\nimport ace from '../images/ace.svg';\nimport zoro from '../images/zoro.svg';\nimport nico from '../images/nico.svg';\nimport dawn from '../images/dawnIsland.jpg';\nimport reverse from '../images/reverseIslando.jpg';\nimport gomu from '../images/gommu.svg';\nimport CharactersContainerGridItem from './CharactersContainerGridItem';\nimport IslandContainerGridItem from './IslandContainerGridItem';\nimport MistObjectGridItem from './MistObjectGridItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CommonItemsContainerGrid extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    if (this.props.type === \"Characters\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"common-items-container_grid\",\n        children: this.props.Characters.map((elem, index) => /*#__PURE__*/_jsxDEV(CharactersContainerGridItem, {\n          mostrar: index < 2,\n          name: elem.name,\n          imgPath: elem.imgPath\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 49\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (this.props.type === \"Islands\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"common-items-container_grid\",\n        children: this.props.Islands.map((elem, index) => /*#__PURE__*/_jsxDEV(IslandContainerGridItem, {\n          mostrar: index != 3,\n          index: index,\n          name: elem.name,\n          img: elem.img,\n          location: elem.location\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 49\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (this.props.type === \"Mist Objects\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"common-items-container_grid common-items-container_grid--start\",\n        children: this.props.Mist.map((elem, index) => /*#__PURE__*/_jsxDEV(MistObjectGridItem, {\n          name: elem.name,\n          img: elem.img,\n          description: elem.description\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 49\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n}\nCommonItemsContainerGrid.defaultProps = {\n  Characters: [{\n    name: \"Monkey D. Luffy\",\n    imgPath: luffy\n  }, {\n    name: \"Portgas D. Ace\",\n    imgPath: ace\n  }, {\n    name: \"Roronoa Zoro\",\n    imgPath: zoro\n  }, {\n    name: \"Nico Robin\",\n    imgPath: nico\n  }],\n  Islands: [{\n    name: \"Dawn Island\",\n    img: dawn,\n    location: \"East Blue\"\n  }, {\n    name: \"Reverse Island\",\n    img: reverse,\n    location: \"East Blue\"\n  }, {\n    name: \"Reverse Island\",\n    img: reverse,\n    location: \"East Blue\"\n  }, {\n    name: \"Reverse Island\",\n    img: reverse,\n    location: \"East Blue\"\n  }],\n  Mist: [{\n    name: \"Gomu Gomu No Mi\",\n    img: gomu,\n    description: \"Is a Paramecia-type Devil Fruit that gives the user's body the properties of rubber, making the user a Rubber Human. It was then accidentally eaten by the series protagonist, Monkey D. Luffy.\"\n  }, {\n    name: \"Gomu Gomu No Mi\",\n    img: gomu,\n    description: \"Is a Paramecia-type Devil Fruit that gives the user's body the properties of rubber, making the user a Rubber Human. It was then accidentally eaten by the series protagonist, Monkey D. Luffy.\"\n  }, {\n    name: \"Gomu Gomu No Mi\",\n    img: gomu,\n    description: \"Is a Paramecia-type Devil Fruit that gives the user's body the properties of rubber, making the user a Rubber Human. It was then accidentally eaten by the series protagonist, Monkey D. Luffy.\"\n  }, {\n    name: \"Gomu Gomu No Mi\",\n    img: gomu,\n    description: \"Is a Paramecia-type Devil Fruit that gives the user's body the properties of rubber, making the user a Rubber Human. It was then accidentally eaten by the series protagonist, Monkey D. Luffy.\"\n  }]\n};","map":{"version":3,"names":["React","Component","luffy","ace","zoro","nico","dawn","reverse","gomu","CharactersContainerGridItem","IslandContainerGridItem","MistObjectGridItem","CommonItemsContainerGrid","constructor","props","render","type","Characters","map","elem","index","name","imgPath","Islands","img","location","Mist","description","defaultProps"],"sources":["/Users/minorsancho/Documents/Web Training/training-web/task09-reactjs/one-piece-page/src/Components/CommonItemsContainerGrid.js"],"sourcesContent":["import React, { Component } from 'react';\nimport luffy from '../images/monkeydluffy.svg'\nimport ace from '../images/ace.svg'\nimport zoro from '../images/zoro.svg'\nimport nico from '../images/nico.svg'\nimport dawn from '../images/dawnIsland.jpg'\nimport reverse from '../images/reverseIslando.jpg'\nimport gomu from '../images/gommu.svg'\n\nimport CharactersContainerGridItem from './CharactersContainerGridItem';\nimport IslandContainerGridItem from './IslandContainerGridItem';\nimport MistObjectGridItem from './MistObjectGridItem';\n\n\nexport default class CommonItemsContainerGrid extends Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        if(this.props.type === \"Characters\"){\n            return (<div className='common-items-container_grid'>\n                    {this.props.Characters.map( (elem, index) => \n                                                <CharactersContainerGridItem mostrar={index<2} key={index} name={elem.name} imgPath={elem.imgPath}/>)}\n                </div>)\n        }\n        if(this.props.type === \"Islands\"){\n            return (<div className='common-items-container_grid'>\n                    {this.props.Islands.map( (elem, index) => \n                                                <IslandContainerGridItem mostrar={index!=3}  index={index} \n                                                        key={index} name={elem.name} img={elem.img} \n                                                        location={elem.location}/>)}\n                </div>)\n        }\n\n        if(this.props.type === \"Mist Objects\"){\n            return (<div className='common-items-container_grid common-items-container_grid--start'>\n                    {this.props.Mist.map( (elem, index) => \n                                                <MistObjectGridItem \n                                                        key={index} name={elem.name} img={elem.img} \n                                                        description={elem.description}/>)}\n                </div>)\n        }\n    }\n}\n\n\nCommonItemsContainerGrid.defaultProps = {\n    Characters :[\n        {\n            name:\"Monkey D. Luffy\",\n            imgPath:luffy\n        },\n        {\n            name:\"Portgas D. Ace\",\n            imgPath:ace\n        },\n        {\n            name:\"Roronoa Zoro\",\n            imgPath:zoro\n        },\n        {\n            name:\"Nico Robin\",\n            imgPath:nico\n        },\n    ],\n    Islands :[\n        {\n            name:\"Dawn Island\",\n            img:dawn,\n            location: \"East Blue\"\n        },\n        {\n            name:\"Reverse Island\",\n            img:reverse,\n            location: \"East Blue\"\n        },\n        {\n            name:\"Reverse Island\",\n            img:reverse,\n            location: \"East Blue\"\n        },\n        {\n            name:\"Reverse Island\",\n            img:reverse,\n            location: \"East Blue\"\n        },\n    ],\n    Mist :[\n        {\n            name:\"Gomu Gomu No Mi\",\n            img:gomu,\n            description: \"Is a Paramecia-type Devil Fruit that gives the user's body the properties of rubber, making the user a Rubber Human. It was then accidentally eaten by the series protagonist, Monkey D. Luffy.\"\n        },\n        {\n            name:\"Gomu Gomu No Mi\",\n            img:gomu,\n            description: \"Is a Paramecia-type Devil Fruit that gives the user's body the properties of rubber, making the user a Rubber Human. It was then accidentally eaten by the series protagonist, Monkey D. Luffy.\"\n        },\n        {\n            name:\"Gomu Gomu No Mi\",\n            img:gomu,\n            description: \"Is a Paramecia-type Devil Fruit that gives the user's body the properties of rubber, making the user a Rubber Human. It was then accidentally eaten by the series protagonist, Monkey D. Luffy.\"\n        },\n        {\n            name:\"Gomu Gomu No Mi\",\n            img:gomu,\n            description: \"Is a Paramecia-type Devil Fruit that gives the user's body the properties of rubber, making the user a Rubber Human. It was then accidentally eaten by the series protagonist, Monkey D. Luffy.\"\n        },\n    ]\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}